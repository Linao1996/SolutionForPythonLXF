import matplotlib.pyplot as plt
import numpy as np
import pandas as pd

# s = pd.Series(np.random.randn(10).cumsum(), index=np.arange(0, 100, 10))
# s.plot(use_index =True)
# plt.show()

# df = pd.DataFrame(np.random.randn(10, 4).cumsum(0), columns=['A', 'B', 'C', 'D'], index=np.arange(0, 100, 10))
# df.plot(grid=True, xlim=[0, 60], logy=False, rot=30, use_index=True, kind='line')
# plt.show()

# fig, axes = plt.subplots(2, 1)
# data = pd.Series(np.random.rand(16), index=list('abcdefghijklmnop'))
# data.plot (kind = 'bar',ax = axes[0],color = 'k',)
# data.plot (kind = 'barh',ax = axes[1],color = 'r')
# plt.show()


# df = pd.DataFrame(np.random.randn(6, 4), index=['one', 'two', 'three', 'four', 'five', 'six'],
#                   columns=['A', 'B', 'C', 'D'])
# df.columns.name = 'Genus'
# df.index.name = 'Num'
# df.plot(kind='barh', stacked=True, alpha=0.5)
# plt.show() #an important application of Bar Graph: s.value_counts().plot(kind = 'bar')

# tips = pd.read_csv('book/ch08/tips.csv')
# party_counts = pd.crosstab(tips.day, tips.size)
# print(tips)
# party_counts = party_counts.ix[:,2:5]
# print(party_counts)
# print(type(party_counts))

data = pd.read_csv('book/ch08/Haiti.csv')
# print(data[['INCIDENT DATE', 'LATITUDE', 'LONGITUDE']][:10])
# print(data.describe())
data = data[(data.LATITUDE > 18) & (data.LATITUDE < 20) & (data.LONGITUDE > -75) & (data.LONGITUDE < -70)
            & data.CATEGORY.notnull()]


def to_cat_list(catstr):
    stripped = (x.strip() for x in catstr.split(','))  # generator
    return [x for x in stripped if x]


def get_all_categories(cat_series):
    cat_sets = (set(to_cat_list(x)) for x in cat_series)
    return sorted(set.union(*cat_sets))


def get_english(cat):
    code, names = cat.split('.')
    if '|' in names:
        names = names.split('|')[1]
    return code, names.strip()


def get_code(seq):
    return [x.split('.')[0] for x in seq if x]


all_cats = get_all_categories(data.CATEGORY)
english_mapping = dict(get_english(x) for x in all_cats)  # tuple to dict
all_codes = get_code(all_cats)
code_index = pd.Index(np.unique(all_codes))
dummy_frame = pd.DataFrame(np.zeros((len(data.index), len(code_index))), index=data.index, columns=code_index)
# print(dummy_frame.ix[:, :10])

for row, cat in zip(data.index, data.CATEGORY):
    codes = get_code(to_cat_list(cat))
    dummy_frame.ix[row, codes] = 1
    # print(row,codes)

data = data.join(dummy_frame.add_prefix('category_'))
# print(data.ix[:, :])


from basemap import Basemap
import matplotlib.pyplot as plt
import numpy as np

# make sure the value of resolution is a lowercase L,
#  for 'low', not a numeral 1
map = Basemap(projection='ortho', lat_0=50, lon_0=-100,
              resolution='l', area_thresh=1000.0)

map.drawcoastlines()

plt.show()


def basic_haiti_map(ax=None, lllat=17.25, urlat=20.25, lllon=-75, urlon=-71):
    m = Basemap(ax=ax, projection='stere', lon_0=(urlon + lllon) / 2, lat_0=(urlat + lllat) / 2, llcrnrlat=lllat,
                urcrnrlat=urlat, llcrnrlon=lllon, urcrnrlon=urlon, resolution='f')
    m.drawcoastlines()
    m.drawstates()
    m.drawcountries()
    return m


fig, axes = plt.subplots(2, 2, figsize=(12, 10))
fig.subplots_adjust(hspace=0.05, wspace=0.05)

to_plot = ['2a', '1', '3c', '7a']
lllat = 17.25
urlat = 20.25
lllon = -75
urlon = -71
for code, ax in zip(to_plot, axes.flat):
    m = basic_haiti_map(ax, lllat=lllat, urlat=urlat, lllon=lllon, urlon=urlon)
    cat_data = data[data['category_%s' % code] == 1]
    x, y = m(cat_data.LONGITUDE, cat_data.LATITUDE)
    m.plot(x, y, 'k.', alpha=0.5)
    ax.set_title = ('%s: %s' % (code, english_mapping[code]))

plt.show()


# print(data.CATEGORY)
# print(english_mapping)
# print(english_mapping['6c'])
# print(data.CATEGORY)
